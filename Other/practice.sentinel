import "units"

memory = func(job){
    result=0
    for job.groups as g{
        for g.tasks as t{
            result+=t.resources.memory else 0
        }
    }
    return result
}

main = rule{
    memory(job) < 1*units.gigabyte
}

//Sentinel is top-down execution

s = "1.1"
a = int(s)   // a = 1
a = float(s) // a = 1.1

a = ["foo", 1, true, [1, 2]]

a[0]    // "foo"
a[2]    // true
a[4]    // undefined
a[-2]   // true
a[-4]   // "foo"
a[-5]   // undefined
a[3][1] // 2

append([1,2], 3)      // [1, 2, 3]
append([1,2], "foo")  // [1, 2, "foo"]
append([1,2], [3])    // [1, 2, [3]]
append(1, 3)          // error()

[1] + [2]   // [1, 2]
[1] + [[1]] // [1, [1]]
[1] + 1     // error

a = [1]
a += [2]    // a = [1, 2]
a += 3      // error'

